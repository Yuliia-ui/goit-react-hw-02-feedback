{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","typeBtn","key","type","className","styles","button","onClick","Section","title","children","theme","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","updateState","feedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"+QA0BeA,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,6BACGD,EAAQE,KAAI,SAAAC,GAAO,OAClB,4BACEC,IAAKD,EACLE,KAAK,SACLC,UAAWC,IAAOC,OAClBC,QAAS,kBAAMR,EAAgBE,KAE9BA,Q,OCJIO,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,wBAAIN,UAAWO,SAAQF,GACtBC,ICGUE,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,IC2B3BC,EA1BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,oCACGD,EAAQ,GACP,oCACE,oCAAUH,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,kDAAwBC,EAAxB,OAIFD,GAAS,kBAAC,EAAD,CAAcL,QAAQ,wBCZlBO,E,4MACnBC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GACZ,OAAO,eACJF,EAAWE,EAAUF,GAAY,O,EAKxCG,mBAAqB,WAAO,IAAD,EACM,EAAKL,MACpC,OAFyB,EACjBN,KADiB,EACXE,IADW,EACND,S,EAIrBW,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKR,MAAMN,KAAO,EAAKW,qBAAwB,M,uDAG1D,IAAD,EACwBI,KAAKT,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,oCACE,kBAAC,EAAD,CAASR,MAAM,yBACb,kBAAC,EAAD,CACEX,QAASiC,OAAOC,KAAKF,KAAKT,OAC1BtB,gBAAiB+B,KAAKR,eAG1B,kBAAC,EAAD,CAASb,MAAM,cACb,kBAAC,EAAD,CACEM,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,KAAKJ,qBACZP,mBAAoBW,KAAKH,0C,GAxCJM,aCDjCC,IAASC,OAAQ,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHlDC,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,MAAQ,0B","file":"static/js/main.a7cfab29.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../FeedbackOptions/FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(typeBtn => (\r\n        <button\r\n          key={typeBtn}\r\n          type=\"submit\"\r\n          className={styles.button}\r\n          onClick={() => onLeaveFeedback(typeBtn)}\r\n        >\r\n          {typeBtn}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport { theme } from '../Section/Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    <h2 className={theme}>{title}</h2>\r\n    {children}\r\n  </>\r\n);\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      {total > 0 && (\r\n        <>\r\n          <p>Good: {good}</p>\r\n          <p>Neutral: {neutral}</p>\r\n          <p>Bad: {bad}</p>\r\n          <p>Total: {total}</p>\r\n          <p>Positive feedbacks: {positivePercentage}%</p>\r\n        </>\r\n      )}\r\n\r\n      {!total && <Notification message=\"No feedback given\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Section from './Section/Section';\r\nimport Statistics from './Statistics/Statistics';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  updateState = feedback => {\r\n    this.setState(prevState => {\r\n      return {\r\n        [feedback]: prevState[feedback] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, bad, neutral } = this.state;\r\n    return good + bad + neutral;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.updateState}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render (<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1rgz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"theme\":\"Section_theme__1k9Us\"};"],"sourceRoot":""}